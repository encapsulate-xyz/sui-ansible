---
- name: Ensure pip is installed on the remote host
  ansible.builtin.package:
    name: python3-pip
    state: present

- name: Install Python hvac library on the remote host
  ansible.builtin.pip:
    name: hvac
    state: present
    executable: pip3

- name: Display from Vault Call Details
  ansible.builtin.debug:
    msg:
      - "Vault URL: {{ vault.default.hcp.vault.url }}"
      - "Vault Secret path: {{ vault_secret_source_path }}"
      - "Environment: {{ env }}"
      - "Secret Type: {{ secret_type }}"
      - "Destination File Path: {{ secret_destination_path }}"

- name: Read the latest version of a KV v2 secret from Vault using Token Auth
  community.hashi_vault.vault_kv2_get:
    url: "{{ vault.default.hcp.vault.url }}"
    engine_mount_point: "{{ env }}"
    path: "{{ vault_secret_source_path }}"
    auth_method: token
    token: "{{ lookup('env', 'VAULT_TOKEN') }}"
  register: vault_response # never to be store in ansible fact, only fetch within the task
  no_log: true # no_log to be used whenever we are registering any sensitive info in playbook

- name: Save the fetched key secret to the file
  ansible.builtin.copy:
    content: "{{ vault_response.secret['key'] }}"
    dest: "{{ secret_destination_path }}"
    owner: "{{ service_identifier }}"
    group: "{{ service_identifier }}"
    mode: "0600"
  when: secret_type == "key"
  notify:
    - Restart service

- name: Save the fetched json secret to the file
  ansible.builtin.copy:
    content: "{{ vault_response.secret }}"
    dest: "{{ secret_destination_path }}"
    owner: "{{ service_identifier }}"
    group: "{{ service_identifier }}"
    mode: "0600"
  when: secret_type == "json"
  notify:
    - Restart service
